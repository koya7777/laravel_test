#--------------------------------------------
# ◇Chapter16　本管理アプリ：ログイン認証機能を追加する
#--------------------------------------------



#**************************************************
# 1. コンストラクタ（サインイン後にのみ表示するロジック）追加
#**************************************************
/app/Http/Controllers/BooksController.php を変更します（リスト16.3）。
#--------------------------------------------
#以下[END]までのコードをコピーし「class BooksController 」に追加します。


   //コンストラクタ （このクラスが呼ばれたら最初に処理をする）
    public function __construct()
    {
        $this->middleware('auth');
    }


#[END]--------------------------------------------




#**************************************************
# 2. 「サインイン・レジスター」後に表示するページを変更
#**************************************************
/routes/web.php 以下のルート定義を変更します（リスト16.5）。
#--------------------------------------------

変更前： Route::get('/home', 'HomeController@index')->name('home');
変更後： Route::get('/home', 'BooksController@index')->name('home'); 

#[END]--------------------------------------------




#**************************************************
# * Route::groupを使ったログイン認証
# * 注意）上記1,2の「コンストラクタ」か「Route::group」のどちらかだけの記述にします。
#**************************************************
Route::group(['middleware' => 'auth'], function () {
   //welcomeページを表示
   Route::get("/",function(){
     return view("welcome");
   });

});






========================================================================================================
★ユーザーがログインしたらユーザーが登録した本のみ表示（１ユーザー ✕ １サービス）
========================================================================================================


#**************************************************
#１．ユーザーidを登録できるようにbooksテーブルを変更
#**************************************************
/database/migrations/[yyyy_mm_dd_hhiiss]_create_books_table.php に以下１行を追加します（リスト16.11）。
#--------------------------------------------

$table->bigInteger('user_id'); //Add:user_id

#[END]--------------------------------------------



#**************************************************
#２．テーブルをリセットする
#**************************************************
#cmsディレクトリで実行
cd cms

#Migrate実行
php artisan migrate:reset

#[END]--------------------------------------------



#**************************************************
#３．テーブルを再構築
#**************************************************

php artisan migrate

#[END]--------------------------------------------



#**************************************************
#４．再構築したテーブルを確認
#**************************************************

mysql -u root -p
root  #パスワード
use c9;
show tables;
desc books;

#[END]--------------------------------------------



#**************************************************
#５．コントローラ「BooksController@index」を修正（リスト16.13）
#**************************************************

 $books = Book::where('user_id',Auth::user()->id)->orderBy('created_at', 'asc')->paginate(3);

#[END]--------------------------------------------




#**************************************************
#６．コントローラ「BooksController@store」に追加（リスト16.14）
#**************************************************

$books->user_id  = Auth::user()->id; //追加のコード

#[END]--------------------------------------------




#**************************************************
#７．コントローラ「BooksController@update」を修正（リスト16.16）
#**************************************************

$books = Book::where('user_id',Auth::user()->id)->find($request->id);

#[END]--------------------------------------------




#**************************************************
#８．コントローラ「BooksController@edit」を修正（リスト16.18）
#**************************************************
#修正範囲が多いのでeditメソッドを上書きでもOK

//更新画面
public function edit($book_id){
    $books = Book::where('user_id',Auth::user()->id)->find($book_id);
    return view('booksedit', [
        'book' => $books
    ]);
}
    
#[END]--------------------------------------------















